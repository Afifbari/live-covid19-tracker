{"version":3,"sources":["Header.js","Services.js","Hospitals.js","InfoBox.js","util.js","Map.js","Table.js","LineGraph.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Button","color","variant","Services","Hospitals","Card","CardContent","Typography","type","InfoBox","title","cases","isRed","active","total","props","onClick","casesTypeColors","hex","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","prettyPrintStat","stat","numeral","format","Map","countries","casesType","center","zoom","TileLayer","url","attribution","map","country","Circle","countryInfo","lat","long","fillOpacity","fillColor","radius","Math","sqrt","Popup","style","backgroundImage","flag","showDataOnMap","Table","options","legend","display","elements","point","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","value","scales","xAxes","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","lastDataPoint","chartData","date","newDataPoint","x","y","push","LineGraph","useState","setData","useEffect","fetch","then","response","json","fetchData","marginTop","length","datasets","backgroundColor","borderColor","App","setCountries","setCountry","setCountryInfo","tableData","setTableData","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setMapCountries","setCasesType","name","iso2","getCountriesData","onCountryChange","event","countryCode","target","FormControl","Select","onChange","MenuItem","e","todayCases","todayRecovered","todayDeaths","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f6c75e08.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n\tMenuItem,\r\n\tFormControl,\r\n\tSelect,\r\n\tCardContent,\r\n\tCard,\r\n\tTypography,\r\n\tButton,\r\n} from \"@material-ui/core\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header() {\r\n\treturn (\r\n\t\t<div className=\"page__nav\">\r\n\t\t\t<div className=\"page__nav-left\">\r\n\t\t\t\t<h1>Corona Emergency Portal</h1>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"page__nav-right\">\r\n\t\t\t\t<Button color=\"primary\">Services</Button>\r\n\t\t\t\t<Button variant=\"contained\" color=\"secondary\">\r\n\t\t\t\t\tLogin/Signup\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport {\r\n\tMenuItem,\r\n\tFormControl,\r\n\tSelect,\r\n\tCardContent,\r\n\tCard,\r\n\tTypography,\r\n\tButton,\r\n} from \"@material-ui/core\";\r\nimport \"./Services.css\";\r\n\r\nfunction Services() {\r\n\treturn (\r\n\t\t<div className=\"page__services\">\r\n\t\t\t<div className=\"services_text\">\r\n\t\t\t\t<h4>\r\n\t\t\t\t\tWelcome to the Corona Emergency Portal.\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tHere you will find all the necessary corona related\r\n\t\t\t\t\temergency services.\r\n\t\t\t\t</h4>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"services_buttons\">\r\n\t\t\t\t<Button variant=\"contained\">Covid-19 Case Update</Button>\r\n\t\t\t\t<Button variant=\"contained\">Corona Hospitals</Button>\r\n\t\t\t\t<Button variant=\"contained\">Corona Safety Knowledge</Button>\r\n\t\t\t\t<Button variant=\"contained\">Corona Ecommerce</Button>\r\n\t\t\t\t<Button variant=\"contained\">Blood Plasma Bank</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Services;\r\n","import React from \"react\";\r\nimport {\r\n\tMenuItem,\r\n\tFormControl,\r\n\tSelect,\r\n\tCardContent,\r\n\tCard,\r\n\tTypography,\r\n\tButton,\r\n} from \"@material-ui/core\";\r\nimport \"./Hospitals.css\";\r\n\r\nfunction Hospitals() {\r\n\treturn (\r\n\t\t<div className=\"page__hospitals\">\r\n\t\t\t<h2>Corona Serving Hospitals</h2>\r\n\t\t\t<div className=\"hospital_rows\">\r\n\t\t\t\t<Card className=\"infoBox\">\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\tKuwait Bangladesh Friendship Government Hospital\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<h5>Address: Isakha Ave, Dhaka 1230</h5>\r\n\t\t\t\t\t\t<h5>Contact: 01999-956290</h5>\r\n\t\t\t\t\t\t<h5>Total Beds: 26</h5>\r\n\t\t\t\t\t\t{/* <h5>Vacancy: 12</h5> */}\r\n\t\t\t\t\t\t<div className=\"infoBox__buttons\">\r\n\t\t\t\t\t\t\t<Button type=\"tel\" variant=\"contained\" color=\"primary\">\r\n\t\t\t\t\t\t\t\tContact\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"secondary\">\r\n\t\t\t\t\t\t\t\tBook\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t\t<Card className=\"infoBox\">\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography>Kurmitola General Hospital</Typography>\r\n\t\t\t\t\t\t<h5>Address: Tongi Diversion Rd, Dhaka 1206</h5>\r\n\t\t\t\t\t\t<h5>Contact: 02-55062388</h5>\r\n\t\t\t\t\t\t<h5>Total Beds: 12</h5>\r\n\t\t\t\t\t\t{/* <h5>Vacancy</h5> */}\r\n\t\t\t\t\t\t<div className=\"infoBox__buttons\">\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\">\r\n\t\t\t\t\t\t\t\tContact\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"secondary\">\r\n\t\t\t\t\t\t\t\tBook\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t\t<Card className=\"infoBox\">\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\tNational Institute of Diseases of the Chest and Hospital\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<h5>Address: Mohakhali, Dhaka</h5>\r\n\t\t\t\t\t\t<h5>Contact: 02-8811910</h5>\r\n\t\t\t\t\t\t<h5>Total Beds: 10</h5>\r\n\t\t\t\t\t\t{/* <h5>Vacancy</h5> */}\r\n\t\t\t\t\t\t<div className=\"infoBox__buttons\">\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\">\r\n\t\t\t\t\t\t\t\tContact\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"secondary\">\r\n\t\t\t\t\t\t\t\tBook\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t\t<Card className=\"infoBox\">\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography>Dhaka Medical College Hospital</Typography>\r\n\t\t\t\t\t\t<h5>Address: Shahabag Dhaka</h5>\r\n\t\t\t\t\t\t<h5>Contact: 02-55165088</h5>\r\n\t\t\t\t\t\t<h5>Total Beds: 30</h5>\r\n\t\t\t\t\t\t{/* <h5>Vacancy</h5> */}\r\n\t\t\t\t\t\t<div className=\"infoBox__buttons\">\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\">\r\n\t\t\t\t\t\t\t\tContact\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"secondary\">\r\n\t\t\t\t\t\t\t\tBook\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t\t<Card className=\"infoBox\">\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography>Railway General Hospital</Typography>\r\n\t\t\t\t\t\t<h5>Address: Komlapur, Dhaka</h5>\r\n\t\t\t\t\t\t<h5>Contact: 02-85547621</h5>\r\n\t\t\t\t\t\t<h5>Total Beds: 15</h5>\r\n\t\t\t\t\t\t{/* <h5>Vacancy</h5> */}\r\n\t\t\t\t\t\t<div className=\"infoBox__buttons\">\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\">\r\n\t\t\t\t\t\t\t\tContact\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"secondary\">\r\n\t\t\t\t\t\t\t\tBook\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"hospital_rows\">\r\n\t\t\t\t<Card className=\"infoBox\">\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography>Dhaka Mohanagar General Hospital</Typography>\r\n\t\t\t\t\t\t<h5>Address: Armanitola, Dhaka</h5>\r\n\t\t\t\t\t\t<h5>Contact: 02-57390860</h5>\r\n\t\t\t\t\t\t<h5>Total Beds: 14</h5>\r\n\t\t\t\t\t\t{/* <h5>Vacancy</h5> */}\r\n\t\t\t\t\t\t<div className=\"infoBox__buttons\">\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\">\r\n\t\t\t\t\t\t\t\tContact\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"secondary\">\r\n\t\t\t\t\t\t\t\tBook\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t\t<Card className=\"infoBox\">\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\tSheikh Russel GastroLiver Hospital\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<h5>Address: Niketon</h5>\r\n\t\t\t\t\t\t<h5>Contact: 02-84752136</h5>\r\n\t\t\t\t\t\t<h5>Total Beds: 22</h5>\r\n\t\t\t\t\t\t{/* <h5>Vacancy</h5> */}\r\n\t\t\t\t\t\t<div className=\"infoBox__buttons\">\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\">\r\n\t\t\t\t\t\t\t\tContact\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"secondary\">\r\n\t\t\t\t\t\t\t\tBook\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t\t<Card className=\"infoBox\">\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography>Sajida Foundation Hospital</Typography>\r\n\t\t\t\t\t\t<h5>Address: Keraniganj</h5>\r\n\t\t\t\t\t\t<h5>Contact: 02-95877462</h5>\r\n\t\t\t\t\t\t<h5>Total Beds: 8</h5>\r\n\t\t\t\t\t\t{/* <h5>Vacancy</h5> */}\r\n\t\t\t\t\t\t<div className=\"infoBox__buttons\">\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\">\r\n\t\t\t\t\t\t\t\tContact\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"secondary\">\r\n\t\t\t\t\t\t\t\tBook\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t\t<Card className=\"infoBox\">\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography>Mirpur Maternity Hospital</Typography>\r\n\t\t\t\t\t\t<h5>Address: Mirpur, Dhaka</h5>\r\n\t\t\t\t\t\t<h5>Contact: 02-55245865</h5>\r\n\t\t\t\t\t\t<h5>Total Beds: 12</h5>\r\n\t\t\t\t\t\t{/* <h5>Vacancy</h5> */}\r\n\t\t\t\t\t\t<div className=\"infoBox__buttons\">\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\">\r\n\t\t\t\t\t\t\t\tContact\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"secondary\">\r\n\t\t\t\t\t\t\t\tBook\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t\t<Card className=\"infoBox\">\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography>Jinjira Specialized Hospital</Typography>\r\n\t\t\t\t\t\t<h5>Address: Keraniganj</h5>\r\n\t\t\t\t\t\t<h5>Contact: 02-88576224</h5>\r\n\t\t\t\t\t\t<h5>Total Beds: 20</h5>\r\n\t\t\t\t\t\t{/* <h5>Vacancy</h5> */}\r\n\t\t\t\t\t\t<div className=\"infoBox__buttons\">\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\">\r\n\t\t\t\t\t\t\t\tContact\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"secondary\">\r\n\t\t\t\t\t\t\t\tBook\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Hospitals;\r\n","import React from \"react\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport \"./InfoBox.css\";\r\n\r\nfunction InfoBox({ title, cases, isRed, active, total, ...props }) {\r\n\treturn (\r\n\t\t<Card\r\n\t\t\tclassName={`infoBox ${active && \"infoBox--selected\"} ${\r\n\t\t\t\tisRed && \"infoBox--red\"\r\n\t\t\t}`}\r\n\t\t\tonClick={props.onClick}\r\n\t\t>\r\n\t\t\t<CardContent>\r\n\t\t\t\t{/* Title i.e. Coronavirus cases */}\r\n\t\t\t\t<Typography className=\"infoBox__title\" color=\"textSecondary\">\r\n\t\t\t\t\t{title}\r\n\t\t\t\t</Typography>\r\n\r\n\t\t\t\t{/* +120k Number of Cases */}\r\n\t\t\t\t<h2\r\n\t\t\t\t\tclassName={`infoBox__cases ${\r\n\t\t\t\t\t\t!isRed && \"infoBox__cases--green\"\r\n\t\t\t\t\t}`}\r\n\t\t\t\t>\r\n\t\t\t\t\t{cases}\r\n\t\t\t\t</h2>\r\n\r\n\t\t\t\t{/* 1.2M Total */}\r\n\t\t\t\t<Typography className=\"infoBox__total\" color=\"textSecondary\">\r\n\t\t\t\t\t{total} Total\r\n\t\t\t\t</Typography>\r\n\t\t\t</CardContent>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport default InfoBox;\r\n","import React from \"react\";\r\nimport numeral from \"numeral\";\r\nimport { Circle, Popup } from \"react-leaflet\";\r\n\r\nconst casesTypeColors = {\r\n\tcases: {\r\n\t\thex: \"#CC1034\",\r\n\t\tmultiplier: 800,\r\n\t},\r\n\trecovered: {\r\n\t\thex: \"#7dd71d\",\r\n\t\tmultiplier: 1200,\r\n\t},\r\n\tdeaths: {\r\n\t\thex: \"#fb4443\",\r\n\t\tmultiplier: 2000,\r\n\t},\r\n};\r\n\r\nexport const sortData = (data) => {\r\n\tconst sortedData = [...data];\r\n\r\n\tsortedData.sort((a, b) => {\r\n\t\tif (a.cases > b.cases) {\r\n\t\t\treturn -1;\r\n\t\t} else {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t});\r\n\treturn sortedData;\r\n};\r\n\r\nexport const prettyPrintStat = (stat) =>\r\n\tstat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n\r\nexport const showDataOnMap = (data, casesType = \"cases\") =>\r\n\tdata.map((country) => (\r\n\t\t<Circle\r\n\t\t\tcenter={[country.countryInfo.lat, country.countryInfo.long]}\r\n\t\t\tfillOpacity={0.4}\r\n\t\t\tcolor={casesTypeColors[casesType].hex}\r\n\t\t\tfillColor={casesTypeColors[casesType].hex}\r\n\t\t\tradius={\r\n\t\t\t\tMath.sqrt(country[casesType]) *\r\n\t\t\t\tcasesTypeColors[casesType].multiplier\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Popup>\r\n\t\t\t\t<div className=\"info-container\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tbackgroundImage: `url(${country.countryInfo.flag})`,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName=\"info-flag\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className=\"info-name\">{country.country}</div>\r\n\t\t\t\t\t<div className=\"info-confirmed\">\r\n\t\t\t\t\t\tCases: {numeral(country.cases).format(\"0,0\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"info-recovered\">\r\n\t\t\t\t\t\tRecovered: {numeral(country.recovered).format(\"0,0\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"info-deaths\">\r\n\t\t\t\t\t\tDeaths: {numeral(country.deaths).format(\"0,0\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Popup>\r\n\t\t</Circle>\r\n\t));\r\n","import React from \"react\";\r\nimport { Map as LeafLetMap, TileLayer } from \"react-leaflet\";\r\nimport { showDataOnMap } from \"./util\";\r\nimport \"./Map.css\";\r\n\r\nfunction Map({ countries, casesType, center, zoom }) {\r\n\treturn (\r\n\t\t<div className=\"map\">\r\n\t\t\t<LeafLetMap center={center} zoom={zoom}>\r\n\t\t\t\t<TileLayer\r\n\t\t\t\t\turl=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n\t\t\t\t\tattribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n\t\t\t\t/>\r\n\t\t\t\t{/* Loop through countries and draw circles on the screen */}\r\n\t\t\t\t{showDataOnMap(countries, casesType)}\r\n\t\t\t</LeafLetMap>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Map;\r\n","import React from \"react\";\r\nimport numeral from \"numeral\";\r\n\r\nfunction Table({ countries }) {\r\n\treturn (\r\n\t\t<div className=\"table\">\r\n\t\t\t{countries.map(({ country, cases }) => (\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>{country}</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<strong>{numeral(cases).format(\"0,0\")}</strong>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Table;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\n\r\nconst options = {\r\n\tlegend: {\r\n\t\tdisplay: false,\r\n\t},\r\n\telements: {\r\n\t\tpoint: {\r\n\t\t\tradius: 0,\r\n\t\t},\r\n\t},\r\n\tmaintainAspectRatio: false,\r\n\ttooltips: {\r\n\t\tmode: \"index\",\r\n\t\tintersect: false,\r\n\t\tcallbacks: {\r\n\t\t\tlabel: function (tooltipItem, data) {\r\n\t\t\t\treturn numeral(tooltipItem.value).format(\"+0,0\");\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tscales: {\r\n\t\txAxes: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"time\",\r\n\t\t\t\ttime: {\r\n\t\t\t\t\tformat: \"MM/DD/YY\",\r\n\t\t\t\t\ttooltipFormat: \"ll\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t],\r\n\t\tyAxes: [\r\n\t\t\t{\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t},\r\n\t\t\t\tticks: {\r\n\t\t\t\t\t// Include a dollar sign in the ticks\r\n\t\t\t\t\tcallback: function (value, index, values) {\r\n\t\t\t\t\t\treturn numeral(value).format(\"0a\");\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n};\r\n\r\nconst buildChartData = (data, casesType) => {\r\n\tconst chartData = [];\r\n\tlet lastDataPoint;\r\n\tfor (let date in data.cases) {\r\n\t\tif (lastDataPoint) {\r\n\t\t\tconst newDataPoint = {\r\n\t\t\t\tx: date,\r\n\t\t\t\ty: data[casesType][date] - lastDataPoint,\r\n\t\t\t};\r\n\t\t\tchartData.push(newDataPoint);\r\n\t\t}\r\n\r\n\t\tlastDataPoint = data[casesType][date];\r\n\t}\r\n\treturn chartData;\r\n};\r\n\r\nfunction LineGraph({ casesType = \"cases\", ...props }) {\r\n\tconst [data, setData] = useState({});\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\tawait fetch(\r\n\t\t\t\t\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\"\r\n\t\t\t)\r\n\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tlet chartData = buildChartData(data, casesType);\r\n\t\t\t\t\tsetData(chartData);\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\tfetchData();\r\n\t}, [casesType]);\r\n\r\n\treturn (\r\n\t\t<div className={props.className} style={{ marginTop: \"15px\" }}>\r\n\t\t\t{data?.length > 0 && (\r\n\t\t\t\t<Line\r\n\t\t\t\t\tdata={{\r\n\t\t\t\t\t\tdatasets: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tbackgroundColor: \"rgba(204, 16, 52, 0.5)\",\r\n\t\t\t\t\t\t\t\tborderColor: \"#CC1034\",\r\n\t\t\t\t\t\t\t\tdata: data,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t}}\r\n\t\t\t\t\toptions={options}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default LineGraph;\r\n","import React, { useState, useEffect } from \"react\";\nimport {\n\tMenuItem,\n\tFormControl,\n\tSelect,\n\tCardContent,\n\tCard,\n\tTypography,\n\tButton,\n} from \"@material-ui/core\";\nimport Header from \"./Header\";\nimport Services from \"./Services\";\nimport Hospitals from \"./Hospitals\";\nimport InfoBox from \"./InfoBox\";\nimport Map from \"./Map\";\nimport Table from \"./Table\";\nimport LineGraph from \"./LineGraph\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport \"./CovidUpdate.css\";\nimport \"./App.css\";\nimport \"./Table.css\";\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n\tconst [countries, setCountries] = useState([]);\n\tconst [country, setCountry] = useState(\"BD\");\n\tconst [countryInfo, setCountryInfo] = useState({});\n\tconst [tableData, setTableData] = useState([]);\n\tconst [mapCenter, setMapCenter] = useState({\n\t\tlat: 24,\n\t\tlng: 90,\n\t});\n\tconst [mapZoom, setMapZoom] = useState(3);\n\tconst [mapCountries, setMapCountries] = useState([]);\n\tconst [casesType, setCasesType] = useState(\"cases\");\n\n\tuseEffect(() => {\n\t\tfetch(\"https://disease.sh/v3/covid-19/countries/BD\")\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tsetCountryInfo(data);\n\t\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst getCountriesData = async () => {\n\t\t\tawait fetch(\"https://disease.sh/v3/covid-19/countries\")\n\t\t\t\t.then((response) => response.json())\n\t\t\t\t.then((data) => {\n\t\t\t\t\tconst countries = data.map((country) => ({\n\t\t\t\t\t\tname: country.country,\n\t\t\t\t\t\tvalue: country.countryInfo.iso2,\n\t\t\t\t\t}));\n\n\t\t\t\t\tconst sortedData = sortData(data);\n\n\t\t\t\t\tsetTableData(sortedData);\n\t\t\t\t\tsetMapCountries(data);\n\t\t\t\t\tsetCountries(countries);\n\t\t\t\t});\n\t\t};\n\n\t\tgetCountriesData();\n\t}, [countries]);\n\n\tconst onCountryChange = async (event) => {\n\t\tconst countryCode = event.target.value;\n\t\tsetCountry(countryCode);\n\n\t\tconst url =\n\t\t\tcountryCode === \"worldwide\"\n\t\t\t\t? \"https://disease.sh/v3/covid-19/all\"\n\t\t\t\t: `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n\t\tawait fetch(url)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tsetCountry(countryCode);\n\t\t\t\tsetCountryInfo(data);\n\n\t\t\t\tsetMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n\t\t\t\tsetMapZoom(4);\n\t\t\t});\n\t};\n\n\t// console.log(\"Country Info >>>>\", countryInfo);\n\n\treturn (\n\t\t<div>\n\t\t\t<Header />\n\t\t\t<Services />\n\t\t\t<div className=\"covidUpdate\">\n\t\t\t\t<div className=\"covidUpdate__header\">\n\t\t\t\t\t<h2>COVID-19 Live Update</h2>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<div className=\"app__left\">\n\t\t\t\t\t\t<div className=\"app__header\">\n\t\t\t\t\t\t\t{/* <h2 >COVID-19 TRACKER</h2> */}\n\t\t\t\t\t\t\t<FormControl className=\"app__dropdown\">\n\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tonChange={onCountryChange}\n\t\t\t\t\t\t\t\t\tvalue={country}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<MenuItem value=\"worldwide\">Worldwide</MenuItem>\n\t\t\t\t\t\t\t\t\t{countries.map((country) => (\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={country.value}>\n\t\t\t\t\t\t\t\t\t\t\t{country.name}\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t\t\t\t{/* <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n\t\t\t\t\t\t<MenuItem value=\"worldwide\">Option 2</MenuItem>\n\t\t\t\t\t\t<MenuItem value=\"worldwide\">Option 3</MenuItem>\n\t\t\t\t\t\t<MenuItem value=\"worldwide\">Yoooooooo</MenuItem> */}\n\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"app__stats\">\n\t\t\t\t\t\t\t<InfoBox\n\t\t\t\t\t\t\t\tisRed\n\t\t\t\t\t\t\t\tactive={casesType === \"cases\"}\n\t\t\t\t\t\t\t\tonClick={(e) => setCasesType(\"cases\")}\n\t\t\t\t\t\t\t\ttitle=\"Coronavirus Case\"\n\t\t\t\t\t\t\t\tcases={prettyPrintStat(countryInfo.todayCases)}\n\t\t\t\t\t\t\t\ttotal={prettyPrintStat(countryInfo.cases)}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<InfoBox\n\t\t\t\t\t\t\t\tactive={casesType === \"recovered\"}\n\t\t\t\t\t\t\t\tonClick={(e) => setCasesType(\"recovered\")}\n\t\t\t\t\t\t\t\ttitle=\"Recovered\"\n\t\t\t\t\t\t\t\tcases={prettyPrintStat(countryInfo.todayRecovered)}\n\t\t\t\t\t\t\t\ttotal={prettyPrintStat(countryInfo.recovered)}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<InfoBox\n\t\t\t\t\t\t\t\tisRed\n\t\t\t\t\t\t\t\tactive={casesType === \"deaths\"}\n\t\t\t\t\t\t\t\tonClick={(e) => setCasesType(\"deaths\")}\n\t\t\t\t\t\t\t\ttitle=\"Deaths\"\n\t\t\t\t\t\t\t\tcases={prettyPrintStat(countryInfo.todayDeaths)}\n\t\t\t\t\t\t\t\ttotal={prettyPrintStat(countryInfo.deaths)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{/* Map */}\n\t\t\t\t\t\t<Map\n\t\t\t\t\t\t\tcasesType={casesType}\n\t\t\t\t\t\t\tcountries={mapCountries}\n\t\t\t\t\t\t\tcenter={mapCenter}\n\t\t\t\t\t\t\tzoom={mapZoom}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Card className=\"app__right\">\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<h3>Lives cases by country</h3>\n\t\t\t\t\t\t\t<Table countries={tableData} />\n\t\t\t\t\t\t\t<h3>Worldwide new {casesType}</h3>\n\t\t\t\t\t\t\t<LineGraph\n\t\t\t\t\t\t\t\tclassName=\"app__graph\"\n\t\t\t\t\t\t\t\tcasesType={casesType}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{/* Graph */}\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</Card>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Hospitals />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}